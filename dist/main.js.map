{"version":3,"sources":["webpack://weather_app/./src/createWeatherObject.js","webpack://weather_app/./src/generateWeatherDescriptors.js","webpack://weather_app/./src/index.js","webpack://weather_app/webpack/bootstrap","webpack://weather_app/webpack/runtime/define property getters","webpack://weather_app/webpack/runtime/hasOwnProperty shorthand","webpack://weather_app/webpack/runtime/make namespace object","webpack://weather_app/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2JAA2J,aAAa;AACxK;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,mBAAmB,E;;;;;;;;;;;;;;ACtClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,kDAAkD,QAAQ,oDAAoD;;AAEzI;AACA,aAAa,cAAc;AAC3B,GAAG;AACH,aAAa,cAAc,iBAAiB,yBAAyB;AACrE,GAAG;AACH,aAAa,cAAc,aAAa,yBAAyB;AACjE,GAAG;AACH,aAAa,cAAc,iBAAiB,yBAAyB;AACrE,GAAG;AACH,aAAa,cAAc,iBAAiB,yBAAyB;AACrE;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC;;AAED,iEAAe,0BAA0B,E;;;;;;;;;;;;;AC5Fe;AACc;;;AAGtE;AACA;AACA,EAAE,2EAAqC;AACvC,8BAA8B,mFAA6C;AAC3E,wBAAwB,uFAAiD;AACzE;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;;;;;;;UCjBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["// Factory function which holds functions to pull weather JSON file and create an object\nconst createWeatherObject = function() {\n\n\t// converts unit from kelvin to farenheight\n\tconst kelvinConverter = function(temp) {\n\t\treturn ((temp * (9/5)) - 459.67);\n\t}\n\n\t//extracts the weather object from a parsed json object\n\tconst extractWeatherObject = function(weatherDataParsed) {\n\t\treturn {\n\t\t\tcurrentFeelsLike: kelvinConverter(weatherDataParsed.current.feels_like),\n\t\t\tdayFeelsLike: kelvinConverter(weatherDataParsed.daily[0].feels_like.day),\n\t\t\tnightFeelsLike: kelvinConverter(weatherDataParsed.daily[0].feels_like.night),\n\t\t\tcurrentActual: kelvinConverter(weatherDataParsed.current.temp),\n\t\t\tdayActual: kelvinConverter(weatherDataParsed.daily[0].temp.day),\n\t\t\tnightActual: kelvinConverter(weatherDataParsed.daily[0].temp.eve),\n\t\t\trainChance: weatherDataParsed.daily[0].rain,\n\t\t\tsnowChance: weatherDataParsed.daily[0].snow,\n\t\t\tcloudCover: weatherDataParsed.daily[0].clouds,\n\t\t}\n\t};\n\n\t//async function to pull the current Weather from openweathermap api\n\tasync function pullWeatherObject() {\n\t\tconst weatherData = await fetch('https://api.openweathermap.org/data/2.5/onecall?lat=37.550201&lon=-121.980827&appid=a7d000bc83452f91d1c5f98b2327ab5a', {mode: 'cors'});\n\t\tconst weatherDataParsed = await weatherData.json();\n\t\t\n\t\t// run function to parse the weather data into the info we need\n\t\treturn extractWeatherObject(weatherDataParsed);\n\t};\n\n\treturn {\n\t\tpullWeatherObject,\n\t\ta: 1\n\t}\n}();\n\nexport default createWeatherObject;","\tconst generateWeatherDescriptors = function() {\n\t\n\t// weather Description that we can edit\n\tconst heatCategories = function() {\n\t\treturn {\n\t\t\thot: 90,\n\t\t\twarm: 70,\n\t\t\tneutral: 50,\n\t\t\tchilly: 30,\n\t\t\tfreezing: -100,\n\t\t}\n\t}();\n\t\n\t// pull temperatureCat based on the temperature input\n\tconst temperatureCategory = function(temperature, weatherDescription) {\n\t\t//turn the temperature object into an array\n\t\tconst temps = Object.entries(weatherDescription);\n\t\n\t\t// loop through temps to assign the key if the temperature is greater than the value\n\t\tfor (let i=0; i<temps.length; i++) {\n\t\t\tif (temperature > temps[i][1]) {\n\t\t\t\treturn temps[i][0];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// takes the weather object and specifies if the day is snowy, rainy, cloudy, partly sunny, or sunny\n\tconst conditionCategory = function(weatherObject) {\n\t\t// minimum probability to mark a day as rainy/snowy\n\t\tlet minimalProbabilityPrec = 0.3;\n\t\n\t\t// minimum probabilities to mark a day as cloudy vs partially cloudy\n\t\tlet cloudyProbability = 0.7;\n\t\tlet partlyProbability = 0.2;\n\t\n\t\tif (weatherObject.snowChance > minimalProbabilityPrec) {\n\t\t\treturn 'snowy';\n\t\t} else if (weatherObject.rainChance > minimalProbabilityPrec) {\n\t\t\treturn 'rainy';\n\t\t} else if (weatherObject.cloudCover > cloudyProbability) {\n\t\t\treturn 'cloudy';\n\t\t} else if (weatherObject.cloudCover > partlyProbability) {\n\t\t\treturn 'partly sunny'\n\t\t} else {\n\t\t\treturn 'sunny'\n\t\t}\n\t}\n\n\tconst weatherDescriptors = function(weatherObj) {\n\t\t// specifies temperature is based on the \"feels like\" temp\n\t\tlet dayTemp = weatherObj.dayFeelsLike;\n\t\tlet nightTemp = weatherObj.nightFeelsLike;\n\t\t\n\t\treturn {\n\t\t\tdayTimeDescription: temperatureCategory(dayTemp, heatCategories),\n\t\t\tnightTimeDescription: temperatureCategory(nightTemp, heatCategories),\n\t\t\tconditionDescription: conditionCategory(weatherObj),\n\t\t}\n\t}\n\n\n\t// capitalize first letter\n\tconst capitalize = function(s) {\n\t\tif (typeof s !== 'string') return ''\n\t\treturn s.charAt(0).toUpperCase() + s.slice(1)\n\t}\n\n\t// take the two weather objects and reflect a description of what is happening today.\n\tconst weatherDescriptionText = function(weatherDescriptors, weatherObject) {\n\t\tconst a = weatherDescriptors.conditionDescription\n\t\tconst beginningText = `${capitalize(weatherDescriptors.dayTimeDescription)} day. ${capitalize(weatherDescriptors.nightTimeDescription)} night.`\n\n\t\tif (a === 'sunny') {\n\t\t\treturn `${beginningText} Sunny.`\n\t\t} else if (a === 'partly sunny') {\n\t\t\treturn `${beginningText} Partly Sunny (${weatherObject.cloudCover}% cloud cover).`\n\t\t} else if (a === 'cloudy') {\n\t\t\treturn `${beginningText} Overcast (${weatherObject.cloudCover}% cloud cover).`\n\t\t} else if (a === 'rainy') {\n\t\t\treturn `${beginningText} Likely rainy (${weatherObject.rainChance}% chance).`\n\t\t} else if (a === 'snowy') {\n\t\t\treturn `${beginningText} Likely snowy (${weatherObject.snowChance}% chance).`\n\t\t}\n\t}\n\n\treturn {\n\t\tweatherDescriptors,\n\t\tweatherDescriptionText,\n\t}\n\n}();\n\nexport default generateWeatherDescriptors;","import createWeatherObject from './createWeatherObject';\nimport generateWeatherDescriptors from './generateWeatherDescriptors';\n\n\n// final function to run things\nconst executeWeather = function() {\n  createWeatherObject.pullWeatherObject().then(function(result) {\n    const weatherDescriptor = generateWeatherDescriptors.weatherDescriptors(result);\n    const weatherText = generateWeatherDescriptors.weatherDescriptionText(weatherDescriptor, result);\n    console.log(weatherDescriptor);\n    console.log(weatherText);\n  })\n}\n\n// console.log(generateWeatherDescriptors);\n// console.log(generateWeatherDescriptors.weatherDescriptors());\n\nexecuteWeather();\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}